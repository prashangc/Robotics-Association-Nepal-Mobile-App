# Generated by Django 4.0.2 on 2022-03-29 06:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categorymember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CatType', models.CharField(max_length=20, verbose_name='Membership type')),
            ],
        ),
        migrations.CreateModel(
            name='EventDetail',
            fields=[
                ('EventID', models.AutoField(primary_key=True, serialize=False)),
                ('EventName', models.CharField(max_length=100)),
                ('EventDescription', models.TextField()),
                ('Eventdate', models.DateField()),
                ('eventype', models.TextField(choices=[('Online', 'Online'), ('Physical', 'Physical')])),
                ('EventIcon', models.ImageField(default='default.jpg', upload_to='images/Photo/Event/')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramDetail',
            fields=[
                ('ProgramID', models.AutoField(primary_key=True, serialize=False)),
                ('ProgramName', models.CharField(max_length=100)),
                ('Objectives', models.TextField(help_text='Enter in bullet points')),
                ('Goals', models.TextField(help_text='Enter in bullet points')),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
                ('ProgramType', models.TextField(choices=[('Online', 'Online'), ('Physical', 'Physical')])),
                ('ProgramIcon', models.ImageField(default='default.jpg', upload_to='images/Photo/Program/')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDetail',
            fields=[
                ('ProjectID', models.AutoField(primary_key=True, serialize=False)),
                ('ProjectName', models.CharField(max_length=100, verbose_name='Project Name')),
                ('ProjectDescription', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('Projectdate', models.DateField(blank=True, verbose_name='Date')),
                ('ProjectPOCname', models.CharField(max_length=100, verbose_name='Contact person')),
                ('ProjectPOCnum', models.CharField(max_length=10, verbose_name='Contact number')),
                ('Projectype', models.TextField(choices=[('Online', 'Online'), ('Physical', 'Physical')], verbose_name='Type')),
                ('Projectlink', models.URLField(blank=True, help_text='url link')),
                ('ProjectTechnicalspecification', models.FileField(blank=True, help_text='The file must be in pdf', upload_to='doc/', verbose_name='Technical specification')),
                ('ProjectWhitepapers', models.FileField(blank=True, help_text='The file must be in pdf', upload_to='doc/whitepapers', verbose_name='White papers')),
                ('ProjectCoverphoto', models.ImageField(default='defaultcover.jpg', help_text='The size must be --- and the resoultion is ---', upload_to='images/coverphoto/ProjectDetails/')),
                ('ProjectIcon', models.ImageField(default='default.jpg', help_text='The size must be --- and the resoultion is ---', upload_to='images/Photo/ProjectDetails/')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('ServicesID', models.AutoField(primary_key=True, serialize=False)),
                ('ServiceName', models.CharField(max_length=100)),
                ('ServiceDescription', models.TextField()),
                ('Servicedate', models.DateField()),
                ('servicetype', models.TextField(choices=[('Online', 'Online'), ('Physical', 'Physical')])),
                ('serviceIcon', models.ImageField(default='default.jpg', upload_to='images/Photo/services/')),
            ],
        ),
        migrations.CreateModel(
            name='TenureDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year', models.CharField(help_text='for eg: 2021-22', max_length=8, verbose_name='year')),
            ],
        ),
        migrations.CreateModel(
            name='membership',
            fields=[
                ('MembershipID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Membername')),
                ('pic', models.ImageField(default='default.jpg', help_text='The size must be --- and the resoultion is ---', upload_to='images/membersphotos/', verbose_name='Member photo')),
                ('socialsite1', models.URLField(blank=True, verbose_name='facebook link')),
                ('socialsite2', models.URLField(blank=True, verbose_name='Linkedin link')),
                ('socialsite3', models.URLField(blank=True, verbose_name='Instagram link')),
                ('CategoryType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.categorymember')),
                ('MembershipYear', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tenuredetail')),
            ],
        ),
    ]
